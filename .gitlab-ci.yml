stages:
  - build
  - build_package
  - upload

build_npm:
  stage: build
  image: node:7.4-alpine
  script:
    - set -x
    - if [ -n "${CI_BUILD_TAG}" ]; then export VERSION_FULL=${CI_BUILD_TAG}-${CI_BUILD_ID}; else export VERSION_FULL=${CI_BUILD_REF_NAME}-${CI_BUILD_ID}; fi
    - if [ -n "${CI_BUILD_TAG}" ]; then export VERSION_SHORT=${CI_BUILD_TAG}; else export VERSION_SHORT=0.0.0-dev; fi
    - sed -i s/0.0.0.0/${VERSION_FULL}/ js/dialogs.js
    - sed -i s/0.0.0/${VERSION_SHORT}/ package.json
    - npm install
    - npm run build.prod
  tags:
    - docker
  artifacts:
    paths:
      - dist/
    expire_in: 3 min
  cache:
    key: "$CI_BUILD_REF_NAME"
    paths:
      - node_modules/


build:
  stage: build_package
  image: python:2.7-alpine
  script:
    - mkdir -p dist2
    - sed -i s/0.0.0/${CI_BUILD_TAG}/ make.json
    - ./build.py make.json
    - echo ${CI_BUILD_TAG} > dist2/bi-runner.latest
  tags:
    - docker
  artifacts:
    paths:
      - dist2/
    expire_in: 3 min
  only:
    - tags

upload:
  stage: upload
  image: registry.getnoc.com/infrastructure/s3helper:master
  variables:
    S3_BASE: https://s3.getnoc.com
    S3_BUCKET: $CI_PROJECT_NAMESPACE
  script:
    /tmp/mc -q cp dist2/* cdn/$S3_BUCKET/
  tags:
    - docker
  only:
    - tags
